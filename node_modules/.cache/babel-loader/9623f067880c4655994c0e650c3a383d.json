{"ast":null,"code":"export function myRequest() {\n  return new Promise((resolve, reject) => {\n    const data = Array.from({\n      length: 5\n    }).map(() => ({\n      id: Math.random() * 1000,\n      name: 'Raul',\n      lastname: 'Gonzales',\n      document: '730461',\n      nationality: 'Española'\n    }));\n    setTimeout(() => {\n      if (Math.round(Math.random())) {\n        resolve({\n          data: data\n        });\n      } else {\n        reject(new Error('the request failed'));\n      }\n    }, 1000);\n  });\n}\n/*return fetch('http://localhost:8080/personAPI/employees')\r\n    .then(res => res.json());\r\n}*/","map":{"version":3,"sources":["C:\\Users\\fbalsas\\eclipse-workspace\\Tabla\\personapi-ba\\personapi-fr\\src\\services\\mockEmployeersService.js"],"names":["myRequest","Promise","resolve","reject","data","Array","from","length","map","id","Math","random","name","lastname","document","nationality","setTimeout","round","Error"],"mappings":"AAEA,OAAO,SAASA,SAAT,GAAqB;AACxB,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpC,UAAMC,IAAI,GAAGC,KAAK,CAACC,IAAN,CAAW;AAACC,MAAAA,MAAM,EAAE;AAAT,KAAX,EAAwBC,GAAxB,CAA4B,OAAO;AAC5CC,MAAAA,EAAE,EAAEC,IAAI,CAACC,MAAL,KAAgB,IADwB;AAE5CC,MAAAA,IAAI,EAAE,MAFsC;AAG5CC,MAAAA,QAAQ,EAAE,UAHkC;AAI5CC,MAAAA,QAAQ,EAAE,QAJkC;AAK5CC,MAAAA,WAAW,EAAE;AAL+B,KAAP,CAA5B,CAAb;AAOAC,IAAAA,UAAU,CAAC,MAAM;AACb,UAAIN,IAAI,CAACO,KAAL,CAAWP,IAAI,CAACC,MAAL,EAAX,CAAJ,EAA+B;AAC3BT,QAAAA,OAAO,CAAC;AACJE,UAAAA,IAAI,EAAEA;AADF,SAAD,CAAP;AAGH,OAJD,MAIO;AACHD,QAAAA,MAAM,CAAC,IAAIe,KAAJ,CAAU,oBAAV,CAAD,CAAN;AACH;AACJ,KARS,EAQP,IARO,CAAV;AASH,GAjBM,CAAP;AAkBH;AAGC","sourcesContent":["\r\n\r\nexport function myRequest() {\r\n    return new Promise((resolve, reject) => {\r\n        const data = Array.from({length: 5}).map(() => ({\r\n            id: Math.random() * 1000,\r\n            name: 'Raul',\r\n            lastname: 'Gonzales',\r\n            document: '730461',\r\n            nationality: 'Española',\r\n        }));\r\n        setTimeout(() => {\r\n            if (Math.round(Math.random())) {\r\n                resolve({\r\n                    data: data,\r\n                });\r\n            } else {\r\n                reject(new Error('the request failed'))\r\n            }\r\n        }, 1000)\r\n    })\r\n}\r\n  \r\n\r\n  /*return fetch('http://localhost:8080/personAPI/employees')\r\n      .then(res => res.json());\r\n}*/\r\n"]},"metadata":{},"sourceType":"module"}