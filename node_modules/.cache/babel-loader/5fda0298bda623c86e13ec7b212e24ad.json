{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\fbalsas\\\\eclipse-workspace\\\\Tabla\\\\personapi-ba\\\\personapi-fr\\\\src\\\\components\\\\Container\\\\Container.jsx\";\nimport React from 'react';\nimport './container.css';\nimport { Header } from \"../Header/Header\";\nimport { Modal } from \"../Modal/Modal\";\n\nconst _React$createContext = React.createContext({}),\n      Consumer = _React$createContext.Consumer,\n      Provider = _React$createContext.Provider;\n\nexport const ModalConsumer = Consumer;\n\nclass Container extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.toggleModal = (value, confirmValue, callback) => () => {\n      this.setState({\n        openModal: value\n      });\n\n      if (callback) {\n        this.setState({\n          listeners: this.state.listeners.concat([callback])\n        });\n      }\n\n      if (confirmValue && this.state.listeners.length) {\n        this.state.listeners.forEach(listener => listener());\n        this.setState({\n          listeners: []\n        });\n      }\n    };\n\n    this.state = {\n      openModal: false,\n      listeners: []\n    };\n  }\n\n  render() {\n    const openModal = this.state.openModal;\n    return React.createElement(Provider, {\n      value: {\n        openModal,\n        toggleModal: this.toggleModal\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"bx-dashboard-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"bx-dashboard-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }), this.props.children), React.createElement(Modal, {\n      confirmLabel: 'Confirm',\n      message: 'Are you sure ?',\n      openModal: this.state.openModal,\n      onCloseModal: this.toggleModal(false, false),\n      onConfirmModal: this.toggleModal(false, true),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Container;","map":{"version":3,"sources":["C:\\Users\\fbalsas\\eclipse-workspace\\Tabla\\personapi-ba\\personapi-fr\\src\\components\\Container\\Container.jsx"],"names":["React","Header","Modal","createContext","Consumer","Provider","ModalConsumer","Container","Component","constructor","props","toggleModal","value","confirmValue","callback","setState","openModal","listeners","state","concat","length","forEach","listener","render","children"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,iBAAP;AACA,SAAQC,MAAR,QAAqB,kBAArB;AACA,SAAQC,KAAR,QAAoB,gBAApB;;6BAE6BF,KAAK,CAACG,aAAN,CAAoB,EAApB,C;MAAtBC,Q,wBAAAA,Q;MAAUC,Q,wBAAAA,Q;;AACjB,OAAO,MAAMC,aAAa,GAAGF,QAAtB;;AAEP,MAAMG,SAAN,SAAwBP,KAAK,CAACQ,SAA9B,CAAwC;AACpCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAOnBC,WAPmB,GAOL,CAACC,KAAD,EAAQC,YAAR,EAAsBC,QAAtB,KAAmC,MAAM;AACpD,WAAKC,QAAL,CAAc;AAACC,QAAAA,SAAS,EAAEJ;AAAZ,OAAd;;AACA,UAAGE,QAAH,EAAa;AACT,aAAKC,QAAL,CAAc;AACVE,UAAAA,SAAS,EAAE,KAAKC,KAAL,CAAWD,SAAX,CAAqBE,MAArB,CAA4B,CAACL,QAAD,CAA5B;AADD,SAAd;AAGH;;AACD,UAAID,YAAY,IAAI,KAAKK,KAAL,CAAWD,SAAX,CAAqBG,MAAzC,EAAiD;AAC7C,aAAKF,KAAL,CAAWD,SAAX,CAAqBI,OAArB,CAA6BC,QAAQ,IAAIA,QAAQ,EAAjD;AACA,aAAKP,QAAL,CAAc;AAACE,UAAAA,SAAS,EAAE;AAAZ,SAAd;AACH;AACH,KAlBkB;;AAEf,SAAKC,KAAL,GAAa;AACTF,MAAAA,SAAS,EAAE,KADF;AAETC,MAAAA,SAAS,EAAE;AAFF,KAAb;AAIH;;AAaDM,EAAAA,MAAM,GAAG;AAAA,UACEP,SADF,GACe,KAAKE,KADpB,CACEF,SADF;AAEN,WACI,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAE;AAACA,QAAAA,SAAD;AAAYL,QAAAA,WAAW,EAAE,KAAKA;AAA9B,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEK,KAAKD,KAAL,CAAWc,QAFhB,CADJ,EAKI,oBAAC,KAAD;AAAO,MAAA,YAAY,EAAE,SAArB;AACO,MAAA,OAAO,EAAE,gBADhB;AAEO,MAAA,SAAS,EAAE,KAAKN,KAAL,CAAWF,SAF7B;AAGO,MAAA,YAAY,EAAE,KAAKL,WAAL,CAAiB,KAAjB,EAAwB,KAAxB,CAHrB;AAIO,MAAA,cAAc,EAAE,KAAKA,WAAL,CAAiB,KAAjB,EAAwB,IAAxB,CAJvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,CADJ,CADJ;AAgBF;;AAtCmC;;AAyCxC,eAAeJ,SAAf","sourcesContent":["import React from 'react';\r\nimport './container.css';\r\nimport {Header} from \"../Header/Header\";\r\nimport {Modal} from \"../Modal/Modal\";\r\n\r\nconst {Consumer, Provider} = React.createContext({});\r\nexport const ModalConsumer = Consumer;\r\n\r\nclass Container extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            openModal: false,\r\n            listeners: []\r\n        }\r\n    }\r\n    toggleModal = (value, confirmValue, callback) => () => {\r\n       this.setState({openModal: value});\r\n       if(callback) {\r\n           this.setState({\r\n               listeners: this.state.listeners.concat([callback])\r\n           })\r\n       }\r\n       if (confirmValue && this.state.listeners.length) {\r\n           this.state.listeners.forEach(listener => listener());\r\n           this.setState({listeners: []});\r\n       }\r\n    };\r\n    render() {\r\n        const {openModal} = this.state;\r\n       return (\r\n           <Provider value={{openModal, toggleModal: this.toggleModal}} >\r\n               <div className=\"bx-dashboard-wrapper\">\r\n                   <div className=\"bx-dashboard-container\">\r\n                       <Header />\r\n                       {this.props.children}\r\n                   </div>\r\n                   <Modal confirmLabel={'Confirm'}\r\n                          message={'Are you sure ?'}\r\n                          openModal={this.state.openModal}\r\n                          onCloseModal={this.toggleModal(false, false)}\r\n                          onConfirmModal={this.toggleModal(false, true)}\r\n                   />\r\n               </div>\r\n           </Provider>\r\n       )\r\n    }\r\n}\r\n\r\nexport default Container;\r\n"]},"metadata":{},"sourceType":"module"}